# from https://stackoverflow.com/questions/55435392/how-to-publish-to-pypi-with-azure-pipelines-and-poetry

trigger:
- master

pool:
  vmImage: ubuntu-latest

variables:
  PRE_COMMIT_HOME: $(Pipeline.Workspace)/pre-commit-cache

steps:
- bash: |
    echo '
    python_version=$(python.version)
    os=$(Agent.OS)
    ' > buildinfo.txt
  displayName: 'Create CI properties file'
- task: UsePythonVersion@0
  inputs:
    versionSpec: 3.7
  displayName: Install Python
- task: Cache@2
  inputs:
    key: 'python | buildinfo.txt | poetry.lock'
    restoreKeys: |
      python | buildinfo.txt
      python
    path: .venv
  displayName: Cache virtualenvs
- script: |
    python -m pip install -U pip virtualenv
    virtualenv .venv --python=python3
    source .venv/bin/activate
    pip install .
    pip install -r requirements.txt
    pip install -r dev-requirements.txt
  displayName: Install requirements
- script: |
    ./pyfiglet/test.py
  displayName: Run test
- script: |
    pytest -v --doctest-modules --junitxml=junit/test-results.xml --cov=python_hue --cov-report=xml
  displayName: Run pytest
- task: PublishTestResults@2
  condition: succeededOrFailed()
  inputs:
    testResultsFiles: '**/test-*.xml'
    testRunTitle: 'Publish test results for Python $(python.version)'
- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: Cobertura
    summaryFileLocation: '$(System.DefaultWorkingDirectory)/**/coverage.xml'
    reportDirectory: '$(System.DefaultWorkingDirectory)/**/htmlcov'
